services:
  postgres:
    image: postgres:13
    container_name: etl_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: dwh
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow:
    image: apache/airflow:2.8.0
    container_name: etl_airflow
    depends_on:
      - postgres
    environment:
      AIRFLOW__WEBSERVER__SECRET_KEY: "this_is_a_very_secret_key_12345"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/dwh
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: Europe/Moscow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
      - ./data:/opt/airflow/data
      - ./tmp_airflow:/opt/airflow/tmp_airflow
    ports:
      - "8080:8080"
    command: >
      bash -c "pip install --upgrade pip &&
      pip install -r /requirements.txt &&
      airflow db migrate &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
      airflow scheduler & 
      airflow webserver"


  airflow_scheduler:
    image: apache/airflow:2.8.0
    container_name: etl_airflow_scheduler
    depends_on:
      - postgres
    environment:
      AIRFLOW__WEBSERVER__SECRET_KEY: "this_is_a_very_secret_key_12345"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/dwh
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
      - ./data:/opt/airflow/data
      - ./tmp_airflow:/opt/airflow/tmp_airflow
    command: >
      bash -c "pip install -r /requirements.txt &&
      airflow scheduler"
    
  jupyter:
    image: jupyter/base-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./Окно в мир.xlsx:/home/jovyan/Окно в мир.xlsx
    environment:
      - JUPYTER_ENABLE_LAB=yes
    depends_on:
      - postgres

  metabase:
    image: metabase/metabase
    container_name: etl_metabase
    ports:
      - "3000:3000"  # Metabase UI: http://localhost:3000
    depends_on:
      - postgres
    environment:
      MB_DB_FILE: /metabase.db
volumes:
  postgres_data:


